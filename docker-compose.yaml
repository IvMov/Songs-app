services:
  # infrastructure
  discovery:
    container_name: discovery
    build: ./discovery
    ports:
      - '8761:8761'

  # apps
  resource-service:
    container_name: resource-service
    build: ./resource-service
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    ports:
      - '8001:8001'
    depends_on:
      - discovery
      - song-service
      - resource-service-db

  song-service:
    build: ./song-service
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    deploy:
      replicas: 2
    depends_on:
      - discovery
      - song-service-db

  nginx:
    image: nginx:alpine-slim
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8002:8002"
    depends_on:
      - song-service

  # dbs
  resource-service-db:
    image: 'postgres:17-alpine'
    container_name: resource-service-db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${RESOURCE_SERVICE_DB}
    volumes:
      - resource-service-db-volume:/var/lib/postgresql/data
      - ./db-init-scripts/resource.sql:/docker-entrypoint-initdb.d/resource.sql

  song-service-db:
    image: 'postgres:17-alpine'
    container_name: song-service-db
    ports:
      - '8532:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${SONG_SERVICE_DB}
    volumes:
      - song-service-db-volume:/var/lib/postgresql/data
      - ./db-init-scripts/song.sql:/docker-entrypoint-initdb.d/song.sql

volumes:
  resource-service-db-volume:
  song-service-db-volume: